{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"modal\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" 아래는 Modal창 정의,  isModalApp가 true일때 Modal창이 실행된다.\"), $props.openModalApp ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", {\n    class: \"inner\",\n    onClick: _cache[1] || (_cache[1] = $event => _ctx.$emit('closeModal'))\n  }, [_createCommentVNode(\" 모달창 아무곳이나 클릭하면 닫힘 \"), _createElementVNode(\"h3\", null, _toDisplayString($props.movieListApp[$props.selectedMovieApp].title), 1 /* TEXT */), _createCommentVNode(\" <button  selectedMovie=index\\\" >상세보기버튼에서 \\n             입력된 index값의 selectedMovie를 가져와서 제목을 보여준다 \"), _createElementVNode(\"p\", null, \"영화 상세정보:\" + _toDisplayString($props.movieListApp[$props.selectedMovieApp].detailInfo), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.$emit('closeModal'))\n  }, \"닫기\"), _createCommentVNode(\" 자식 컴포넌트(Modal.vue)에서 부모 컴포넌트에게 데이터 변경을 요청할 수 있는 방법이\\n               $emit(임의의 이밴트명) -> App.vue의 <Modal /> 태그로 받는다  \\n         \"), _createCommentVNode(\" Modal컴포넌트로 분리전 원 소스--------\\n         <button @click=\\\"isModal=false\\\">닫기</button>\\n             isModal이 App.vue에 있기 때문에 이 변수를 전달 받는다. \")])])) : _createCommentVNode(\"v-if\", true)], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */);\n}","map":{"version":3,"names":["key","class","_createElementBlock","_Fragment","_createCommentVNode","$props","openModalApp","_hoisted_1","_createElementVNode","onClick","_cache","$event","_ctx","$emit","_toDisplayString","movieListApp","selectedMovieApp","title","detailInfo"],"sources":["/Users/axis/MacBookStore/ComStudy/Vue/Vue3-GalleryMall-V1/src/components/ImageModal.vue"],"sourcesContent":["\nApp.vue에서 ImageModal.vue로 데이터를 전달하는 방법\n\n<template>\n    <!-- 아래는 Modal창 정의,  isModalApp가 true일때 Modal창이 실행된다.-->\n    <div class=\"modal\" v-if=\"openModalApp\">         \n   \n      <div class=\"inner\" @click=\"$emit('closeModal')\">     <!-- 모달창 아무곳이나 클릭하면 닫힘 -->\n        <h3>  {{movieListApp[selectedMovieApp].title}}  </h3>\n        <!-- <button  selectedMovie=index\" >상세보기버튼에서 \n             입력된 index값의 selectedMovie를 가져와서 제목을 보여준다 -->\n  \n        <p>영화 상세정보:{{movieListApp[selectedMovieApp].detailInfo}}</p>\n  \n        <button @click=\"$emit('closeModal')\">닫기</button>\n         <!-- 자식 컴포넌트(Modal.vue)에서 부모 컴포넌트에게 데이터 변경을 요청할 수 있는 방법이\n               $emit(임의의 이밴트명) -> App.vue의 <Modal /> 태그로 받는다  \n         -->\n  \n        <!-- Modal컴포넌트로 분리전 원 소스--------\n         <button @click=\"isModal=false\">닫기</button>\n             isModal이 App.vue에 있기 때문에 이 변수를 전달 받는다. -->\n      </div>\n     </div>\n  </template> \n  \n  <script>\n     export default{\n       name:\"ImageModalComponent\", //컴포넌트 용도로 쓸려면 명명규칙에 따라 Modal한 다음에 Component를 붙여준다. \n       \n       props:{    \n         //App.vue의 <Modal>태그에서 넘겨준 것을 '변수명:데이터 타입'으로 등록. \n         //그러면 App.vue에서 정의한 변수들을 인식하고 이 파일에서 <template>에서 쓸수 있다. \n       openModalApp:Boolean,\n       movieListApp:Array,\n       selectedMovieApp:Number,\n       \n      },\n  \n     }\n  \n    \n  </script>\n  \n  <style>\n  \n  \n  </style>\n  \n  \n  "],"mappings":";;EAAAA,GAAA;EAKSC,KAAK,EAAC;;;uBALfC,mBAAA,CAAAC,SAAA,SAIIC,mBAAA,qDAAwD,EAC/BC,MAAA,CAAAC,YAAY,I,cAArCJ,mBAAA,CAkBO,OAlBPK,UAkBO,GAhBLC,mBAAA,CAeM;IAfDP,KAAK,EAAC,OAAO;IAAEQ,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,IAAA,CAAAC,KAAK;MAAqBT,mBAAA,uBAA0B,EAC7EI,mBAAA,CAAqD,YAAAM,gBAAA,CAA7CT,MAAA,CAAAU,YAAY,CAACV,MAAA,CAAAW,gBAAgB,EAAEC,KAAK,kBAC5Cb,mBAAA,sGACiD,EAEjDI,mBAAA,CAA4D,WAAzD,UAAQ,GAAAM,gBAAA,CAAET,MAAA,CAAAU,YAAY,CAACV,MAAA,CAAAW,gBAAgB,EAAEE,UAAU,kBAEtDV,mBAAA,CAAgD;IAAvCC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,IAAA,CAAAC,KAAK;KAAgB,IAAE,GACtCT,mBAAA,mIAEG,EAEJA,mBAAA,6IAE+C,C,OArBvDA,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}