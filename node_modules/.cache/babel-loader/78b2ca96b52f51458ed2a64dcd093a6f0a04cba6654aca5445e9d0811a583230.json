{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport lib from \"@/scripts/lib\";\nimport { reactive } from 'vue';\nexport default {\n  setup() {\n    const state = reactive({\n      orders: []\n    });\n    axios.get(\"/api/orders\").then(({\n      data\n    }) => {\n      state.orders = [];\n      //만약 axios.get 호출 전에 state.orders에 데이터가 이미 들어있는 상태라면(어떤 이유로든), \n      // state.orders = [];를 통해 기존 데이터를 초기화하지 않으면 이전 데이터가 새로운 데이터와 섞일 위험이 있습니다.\n\n      for (let object of data) {\n        //**data는 배열, 배열에서 객체를 꺼내 json문자열을 객체로 변환뒤 다시 state.orders배열 안에 꺼낸 객체를 집어넣는 과정이다.\n        //***items속성이 JSON 문자열이기 때문에 변환과정이 필요, Home.vue의 데이터 처리방식과 차이점!!\n        //json은 키에 해당하는 것이 \"\"로 감싸져 있는데 이것을 제거하는 작업이 자바스크립트 객체로 만드는 parse변환 과정이다.\n\n        if (object.items) {\n          //object안에 items가 있다면\n          object.items = JSON.parse(object.items); //items속성이 JSON 문자열이기 때문에 JavaScript 객체(혹은 배열)로 변환하고 다시 덮어씁니다\n        }\n        state.orders.push(object); //push는 JavaScript 배열 메서드로 배열의 끝에 하나 이상의 요소를 추가하는 데 사용\n      } //for\n    }); //axios\n\n    return {\n      state,\n      lib\n    };\n  }\n};","map":{"version":3,"names":["axios","lib","reactive","setup","state","orders","get","then","data","object","items","JSON","parse","push"],"sources":["E:\\Program Study\\Vue3\\Vue3-GalleryMall-V1\\src\\pages\\Orders.vue"],"sourcesContent":["//  주문을 하고 결제한 내역을 보여주는 페이지\r\n<template>\r\n    <div class=\"orders\"> <!-- 여기 수정  -->\r\n<!-- 아래하단 부터 https://getbootstrap.com/docs/5.0/examples/checkout/에서 소스보기 한 것을 복사해서 붙여넣기 -->\r\n      <div class=\"container\">   \r\n       \r\n       <table class=\"table table-bordered\">\r\n        <thead>\r\n          <tr>\r\n            <th>번호</th>\r\n            <th>주문자명</th>\r\n            <th>주소</th>\r\n            <th>결제수단</th>\r\n            <th>구입항목</th>\r\n            <th>주문날짜</th>\r\n           </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr v-for=\"(order, index1) in state.orders\" :key=\"index1\">\r\n              <td>{{ state.orders.length-index1 }} </td>\r\n              <td>{{ order.name }}</td>\r\n              <td>{{ order.address}}</td>\r\n              <td>{{ order.payment }}</td>\r\n              <td>\r\n                <div v-for=\"(item, index2) in order.items\" :key=\"index2\">{{item.name }}</div>\r\n                <!-- v-for 디렉티브를 중첩하여 사용할 때, 상위 v-for에서 가져온 데이터를 하위 v-for에서 활용할 수 있다 -->\r\n                <!--order.items -> [{ \"id\": 2, \"name\": \"Van-gogh\", \"imgPath\": \"/img/van-gogh.jpg\", \"price\": 4500000, \"discountPrice\": 20 } ] -->\r\n              </td>\r\n              <!-- $$내가 추가 한것 -->\r\n              <td v-if=\"order.orderDate\">{{ order.orderDate.split('T').join('-') }}</td>\r\n              <td v-else>주문날짜 없음</td>\r\n            \r\n            </tr>\r\n          </tbody>\r\n       </table>\r\n      </div>  <!-- container -->\r\n     </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport axios from 'axios';\r\nimport lib from \"@/scripts/lib\";\r\nimport { reactive } from 'vue';\r\n\r\n  export default{\r\n    setup(){\r\n      const state=reactive({\r\n          orders:[],\r\n      })\r\n      \r\n      axios.get(\"/api/orders\").then(({data}) => {\r\n      \r\n      state.orders=[];\r\n     //만약 axios.get 호출 전에 state.orders에 데이터가 이미 들어있는 상태라면(어떤 이유로든), \r\n     // state.orders = [];를 통해 기존 데이터를 초기화하지 않으면 이전 데이터가 새로운 데이터와 섞일 위험이 있습니다.\r\n\r\n      for(let object of data){   \r\n        //**data는 배열, 배열에서 객체를 꺼내 json문자열을 객체로 변환뒤 다시 state.orders배열 안에 꺼낸 객체를 집어넣는 과정이다.\r\n        //***items속성이 JSON 문자열이기 때문에 변환과정이 필요, Home.vue의 데이터 처리방식과 차이점!!\r\n        //json은 키에 해당하는 것이 \"\"로 감싸져 있는데 이것을 제거하는 작업이 자바스크립트 객체로 만드는 parse변환 과정이다.\r\n        \r\n        if(object.items){   //object안에 items가 있다면\r\n          object.items=JSON.parse(object.items);  //items속성이 JSON 문자열이기 때문에 JavaScript 객체(혹은 배열)로 변환하고 다시 덮어씁니다\r\n        }\r\n        state.orders.push(object);  //push는 JavaScript 배열 메서드로 배열의 끝에 하나 이상의 요소를 추가하는 데 사용\r\n      }//for\r\n     })//axios\r\n      \r\n    return {state, lib }\r\n    }\r\n  }\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.table{\r\n  margin-top: 30px;\r\n}\r\n\r\n.table > tbody{\r\n  border-top: 1px solid #eee;\r\n}\r\n</style>"],"mappings":";AAyCA,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAOC,GAAE,MAAO,eAAe;AAC/B,SAASC,QAAO,QAAS,KAAK;AAE5B,eAAc;EACZC,KAAKA,CAAA,EAAE;IACL,MAAMC,KAAK,GAACF,QAAQ,CAAC;MACjBG,MAAM,EAAC;IACX,CAAC;IAEDL,KAAK,CAACM,GAAG,CAAC,aAAa,CAAC,CAACC,IAAI,CAAC,CAAC;MAACC;IAAI,CAAC,KAAK;MAE1CJ,KAAK,CAACC,MAAM,GAAC,EAAE;MAChB;MACA;;MAEC,KAAI,IAAII,MAAK,IAAKD,IAAI,EAAC;QACrB;QACA;QACA;;QAEA,IAAGC,MAAM,CAACC,KAAK,EAAC;UAAI;UAClBD,MAAM,CAACC,KAAK,GAACC,IAAI,CAACC,KAAK,CAACH,MAAM,CAACC,KAAK,CAAC,EAAG;QAC1C;QACAN,KAAK,CAACC,MAAM,CAACQ,IAAI,CAACJ,MAAM,CAAC,EAAG;MAC9B,CAAC;IACF,CAAC,CAAC;;IAEH,OAAO;MAACL,KAAK;MAAEH;IAAI;EACnB;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}