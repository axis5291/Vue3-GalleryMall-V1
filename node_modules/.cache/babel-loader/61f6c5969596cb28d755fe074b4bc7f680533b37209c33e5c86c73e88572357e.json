{"ast":null,"code":"// vuex를 사용하여 Vue 애플리케이션 전체에서 사용자 정보를 관리하기 위한 중심적인 상태 저장소 역할, 아직은 사용자 한명만 관리하는 상태 저장소\n// 사용자가 로그인하면 사용자 ID를 Vuex 상태에 저장하고, 애플리케이션의 다른 컴포넌트에서 로그인 정보를 활용할 수 있다\n//이를 위해서는 store.js에서 vuex를 만들어 별도로 js형태로 만들고 main.js에서 등록을 하면 다른 컴포넌트에서 import해서 사용할 수 있다.\n//vuex를 사용하려면  'npm install vuex@next --save'의 설치가 필요\n//현재 login.vue, Header.vue, App.vue에서 사용자 정보를 사용하고 있음\n\nimport { createStore } from 'vuex';\nconst store = createStore({\n  //createStore 함수로 Vuex 스토어를 생성합니다.\n  state() {\n    //상태:로그인한 사용자 ID와 같은 데이터를 저장.\n    return {\n      account: {\n        id: 0 //로그인한 사용자의 아이디 0으로 일단 초기화\n      }\n    };\n  },\n  mutations: {\n    //변경(mutations): 상태를 업데이트할 때 사용, \n    setAccount(state, sendId) {\n      //setAccount는 state.account.id 값을 변경하는 역할, state는 애플리케이션에서 관리할 데이터를 저장하는 곳\n      state.account.id = sendId;\n    }\n  }\n});\nexport default store;\n//*state.account.id같이 처리이유\n//객체안에 객체를 넣은 이유는 계정관련은 account 객체, 설정 정보는 settings 객체, 알림 데이터는 notifications 객체에서 관리..\n// 이런식으로 그룹별로 처리하기 위해","map":{"version":3,"names":["createStore","store","state","account","id","mutations","setAccount","sendId"],"sources":["/Users/axis/MacBookStore/ComStudy/Vue/Vue3-GalleryMall-V1/src/scripts/store.js"],"sourcesContent":["// vuex를 사용하여 Vue 애플리케이션 전체에서 사용자 정보를 관리하기 위한 중심적인 상태 저장소 역할, 아직은 사용자 한명만 관리하는 상태 저장소\n// 사용자가 로그인하면 사용자 ID를 Vuex 상태에 저장하고, 애플리케이션의 다른 컴포넌트에서 로그인 정보를 활용할 수 있다\n//이를 위해서는 store.js에서 vuex를 만들어 별도로 js형태로 만들고 main.js에서 등록을 하면 다른 컴포넌트에서 import해서 사용할 수 있다.\n//vuex를 사용하려면  'npm install vuex@next --save'의 설치가 필요\n//현재 login.vue, Header.vue, App.vue에서 사용자 정보를 사용하고 있음\n\nimport { createStore } from 'vuex'\n\nconst store = createStore({ //createStore 함수로 Vuex 스토어를 생성합니다.\n  state () {                //상태:로그인한 사용자 ID와 같은 데이터를 저장.\n    return {\n      account:{\n        id:0,  //로그인한 사용자의 아이디 0으로 일단 초기화\n      }\n    }\n  },\n  mutations: {  //변경(mutations): 상태를 업데이트할 때 사용, \n    setAccount(state, sendId){  //setAccount는 state.account.id 값을 변경하는 역할, state는 애플리케이션에서 관리할 데이터를 저장하는 곳\n      state.account.id=sendId;    \n    }\n  }\n})\n\nexport default store\n//*state.account.id같이 처리이유\n//객체안에 객체를 넣은 이유는 계정관련은 account 객체, 설정 정보는 settings 객체, 알림 데이터는 notifications 객체에서 관리..\n// 이런식으로 그룹별로 처리하기 위해"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA,SAASA,WAAW,QAAQ,MAAM;AAElC,MAAMC,KAAK,GAAGD,WAAW,CAAC;EAAE;EAC1BE,KAAKA,CAAA,EAAI;IAAiB;IACxB,OAAO;MACLC,OAAO,EAAC;QACNC,EAAE,EAAC,CAAC,CAAG;MACT;IACF,CAAC;EACH,CAAC;EACDC,SAAS,EAAE;IAAG;IACZC,UAAUA,CAACJ,KAAK,EAAEK,MAAM,EAAC;MAAG;MAC1BL,KAAK,CAACC,OAAO,CAACC,EAAE,GAACG,MAAM;IACzB;EACF;AACF,CAAC,CAAC;AAEF,eAAeN,KAAK;AACpB;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}